@using HW1c.Models;
@model LibViewModel

@{
    ViewBag.Title = "Library";
}

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <style>
        * {
            box-sizing: border-box;
        }

        .img-magnifier-container {
            position: relative;
        }

        .img-magnifier-glass {
            position: absolute;
            border: 3px solid #000;
            border-radius: 50%;
            cursor: none;
            /*Set the size of the magnifier glass:*/
            width: 120px;
            height: 120px;
        }
    </style>
    <script>
        function magnify(imgID, zoom) {
            var img, glass, w, h, bw;
            img = document.getElementById(imgID);
            /*create magnifier glass:*/
            glass = document.createElement("DIV");
            glass.setAttribute("class", "img-magnifier-glass");
            /*insert magnifier glass:*/
            img.parentElement.insertBefore(glass, img);
            /*set background properties for the magnifier glass:*/
            glass.style.backgroundImage = "url('" + img.src + "')";
            glass.style.backgroundRepeat = "no-repeat";
            glass.style.backgroundSize = (img.width * zoom) + "px " + (img.height * zoom) + "px";
            bw = 3;
            w = glass.offsetWidth / 2;
            h = glass.offsetHeight / 2;
            /*execute a function when someone moves the magnifier glass over the image:*/
            glass.addEventListener("mousemove", moveMagnifier);
            img.addEventListener("mousemove", moveMagnifier);
            /*and also for touch screens:*/
            glass.addEventListener("touchmove", moveMagnifier);
            img.addEventListener("touchmove", moveMagnifier);
            function moveMagnifier(e) {
                var pos, x, y;
                /*prevent any other actions that may occur when moving over the image*/
                e.preventDefault();
                /*get the cursor's x and y positions:*/
                pos = getCursorPos(e);
                x = pos.x;
                y = pos.y;
                /*prevent the magnifier glass from being positioned outside the image:*/
                if (x > img.width - (w / zoom)) { x = img.width - (w / zoom); }
                if (x < w / zoom) { x = w / zoom; }
                if (y > img.height - (h / zoom)) { y = img.height - (h / zoom); }
                if (y < h / zoom) { y = h / zoom; }
                /*set the position of the magnifier glass:*/
                glass.style.left = (x - w) + "px";
                glass.style.top = (y - h) + "px";
                /*display what the magnifier glass "sees":*/
                glass.style.backgroundPosition = "-" + ((x * zoom) - w + bw) + "px -" + ((y * zoom) - h + bw) + "px";
            }
            function getCursorPos(e) {
                var a, x = 0, y = 0;
                e = e || window.event;
                /*get the x and y positions of the image:*/
                a = img.getBoundingClientRect();
                /*calculate the cursor's x and y coordinates, relative to the image:*/
                x = e.pageX - a.left;
                y = e.pageY - a.top;
                /*consider any page scrolling:*/
                x = x - window.pageXOffset;
                y = y - window.pageYOffset;
                return { x: x, y: y };
            }
        }
    </script>
</head>
<body>

    <h1>Photo library</h1>

    <p>Browse the list to choose a photo to view</p>

    <div class="img-magnifier-container">
        <img id="myimage" src="~/Content/Img/testPhotoGood.png" width="350" height="400">
    </div>
    <br />
    <br />
    <p>Click the button to use the magnifying glass.</p>
    <button class="btn btn-floating btn-primary btn-lg" onclick='magnify("myimage", 3)'><i class="fa fa-search"></i></button>


    <div class="jumbotron">
        <h1 class="display-4">Photo information</h1>
        <p class="lead">Below table lists detailed mobile app related photo information.</p>
    </div>
    <div class="row text-center">
        <br />
        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">PhotoID</th>
                    <th scope="col">Location</th>
                    <th scope="col">Date</th>
                    <th scope="col">Phone ID</th>
                    <th scope="col">AppVersion</th>
                </tr>
            </thead>
            <tbody>
                @{
                    foreach (var item in Model.PhotoViewModel.PhotoList)
                    {
                        <tr>
                            <td>@Html.ActionLink(item.PhotoID, "Read", new { id = item.PhotoID }, new { @class = "small" })</td>
                            <td>@item.Location</td>
                            <td>@item.RecordedDateTime.ToShortDateString()</td>
                            <td>@item.PhoneID</td>
                            <td>@item.AppVersion</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</body>

